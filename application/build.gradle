buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

dependencies {
//    implementation "log4j:log4j:$log4j"
//    implementation "org.slf4j:slf4j-api:$slf4j"
//    implementation "org.slf4j:jcl-over-slf4j:$slf4j"
//    implementation "org.slf4j:slf4j-log4j12:$slf4j"
//    implementation "org.apache.logging.log4j:log4j-core:$log4j2"
//    implementation "org.apache.logging.log4j:log4j-api:$log4j2"
//    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2" 

    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.12'

    compile project(':service')
    compile project(':commons')
}

task standaloneJar(type: Jar, dependsOn: jar) {
    archiveBaseName = "eureka-client-standalone"
    archiveClassifier = "standalone"
    archiveVersion = ""

    from sourceSets.main.allJava
//    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
    from configurations.runtimeClasspath.collect {zipTree(it)}

    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.JarLauncher',
                'Manifest-Version' : '1.0',
                'Start-Class' : 'com.simao.application.server.ApplicationServer'
    }

    exclude("META-INF/*.SF")
    exclude("META-INF/*.DSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
}

task sourcesJar(type: Jar, dependsOn: jar) {
    archiveBaseName = "eureka-client-source"
    archiveClassifier = "standalone"
    archiveVersion = ""

    from sourceSets.main.output
    //dependsOn configurations.runtimeClasspath
    from configurations.runtime.collect {zipTree(it)}
//    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
//    from configurations.runtimeClasspath.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.JarLauncher',
                'Manifest-Version' : '1.0',
                'Start-Class' : 'com.simao.application.server.ApplicationServer'
    }
}


bootJar {
    archiveBaseName = 'eureka-client'
    archiveClassifier = 'standalone'
    archiveVersion = ''
    mainClassName = 'com.simao.application.server.ApplicationServer'
}

uploadBootArchives {
    repositories {
        mavenDeployer {
//            def deployerUsername = System.env.sodaMavenDeployer ?: sodaMavenDeployer
//            def deployerPassword = System.env.sodaMavenDeployerPassword ?: sodaMavenDeployerPassword
//            def artifactType = project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'
//
//            repository(url: "https://nexus.sodacar.com/repository/maven-${artifactType}/") {
//                authentication(
//                        userName: deployerUsername,
//                        password: deployerPassword
//                )
//            }
        }
    }
}